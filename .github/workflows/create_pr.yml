name: CI/CD Workflow

on:
  push:
    pull_request:
      branches:
        - 'master'

jobs:
  super-lint:
    name: Lint code base
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13.3
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: romansulymka
          POSTGRES_DB: mywallet
          ##add hostname {postgres}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Build with Maven
        run: ./mvnw clean install
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: List files in target directory
        run: ls target

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: mvn spring-boot:build-image -Dspring-boot.build-image.imageName=romansulymka/latest:tagname

      - name: Push Docker image
        run: docker push romansulymka/latest:tagname

      - name: Deploy Docker image
        run: docker run -p 8080:8080 -e POSTGRES_HOST=postgres -e POSTGRES_PORT=5432 romansulymka/latest:tagname

